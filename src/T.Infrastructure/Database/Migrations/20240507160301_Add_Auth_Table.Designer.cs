// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using T.Infrastructure.Database;

#nullable disable

namespace DR.Infrastructure.Database.Migrations
{
    [DbContext(typeof(DrContext))]
    [Migration("20240507160301_Add_Auth_Table")]
    partial class Add_Auth_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DR.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("uuid");

                    b.Property<string>("ClaimName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClaim")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentId")
                        .HasMaxLength(32)
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Permission", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01f543fd-521f-41c7-83b3-00253996dd69"),
                            ClaimName = "DR.Kaban",
                            DisplayName = "Quản lý dự án",
                            IsActive = true,
                            IsClaim = true,
                            IsDefault = true,
                            OrderIndex = 0
                        },
                        new
                        {
                            Id = new Guid("4ff1aa66-fc29-4e06-becb-6e307e6aa09a"),
                            ClaimName = "DR.DevTools",
                            DisplayName = "Công cụ",
                            IsActive = true,
                            IsClaim = true,
                            IsDefault = true,
                            OrderIndex = 1
                        },
                        new
                        {
                            Id = new Guid("cc91c9c4-5845-407d-867b-0c1453f2b852"),
                            ClaimName = "DR.User",
                            DisplayName = "Quản lý người dùng",
                            IsActive = true,
                            IsClaim = true,
                            IsDefault = false,
                            OrderIndex = 2
                        },
                        new
                        {
                            Id = new Guid("31f07c51-7067-4e96-9f44-de6a02818513"),
                            ClaimName = "DR.User.Password",
                            DisplayName = "Quản lý mật khẩu",
                            IsActive = true,
                            IsClaim = true,
                            IsDefault = false,
                            OrderIndex = 3,
                            ParentId = new Guid("de5ffa57-021d-4768-b361-894828259350")
                        },
                        new
                        {
                            Id = new Guid("8ad5baf8-b7f6-433c-94e7-87ca45728945"),
                            ClaimName = "DR.User.Edit",
                            DisplayName = "Cập nhật người dùng",
                            IsActive = true,
                            IsClaim = true,
                            IsDefault = false,
                            OrderIndex = 4,
                            ParentId = new Guid("cc91c9c4-5845-407d-867b-0c1453f2b852")
                        });
                });

            modelBuilder.Entity("DR.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long>("CreatedDate")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("SearchName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Role", "public");
                });

            modelBuilder.Entity("DR.Domain.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasMaxLength(32)
                        .HasColumnType("uuid");

                    b.Property<Guid>("PermissionId")
                        .HasMaxLength(32)
                        .HasColumnType("uuid");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission", "public");
                });

            modelBuilder.Entity("DR.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dec5aee5-12e1-4b61-8d3f-ad5d5235e6cd"),
                            Address = "Thanh An, Hớn Quản, Bình Phước",
                            IsActive = true,
                            IsAdmin = true,
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Admin",
                            Password = "",
                            Phone = "",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DR.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("DR.Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DR.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DR.Domain.Entities.User", b =>
                {
                    b.HasOne("DR.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DR.Domain.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("DR.Domain.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
